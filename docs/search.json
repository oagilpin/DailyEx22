[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CSU ESS330 Daily Exercise 22",
    "section": "",
    "text": "library(tidyverse)   \n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(lubridate)   \nlibrary(modeltime)   \nlibrary(tidymodels)  \n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.4.0     ✔ tune         1.3.0\n✔ infer        1.0.7     ✔ workflows    1.2.0\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.3.1     ✔ yardstick    1.3.2\n✔ recipes      1.2.1     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n\nlibrary(dataRetrieval) \nlibrary(parsnip) \nlibrary(timetk)\nlibrary(prophet)\n\nLoading required package: Rcpp\n\nAttaching package: 'Rcpp'\n\nThe following object is masked from 'package:rsample':\n\n    populate\n\nLoading required package: rlang\n\nAttaching package: 'rlang'\n\nThe following objects are masked from 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n\nlibrary(tsibble)\n\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n\nAttaching package: 'tsibble'\n\nThe following object is masked from 'package:lubridate':\n\n    interval\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n\nlibrary(dplyr)\n\n\n\n\nset.seed(123)\n\npoudre_flow &lt;- readNWISdv(siteNumber = \"06752260\",\n                          parameterCd = \"00060\",\n                          startDate = \"2013-01-01\",\n                          endDate = \"2023-12-31\") |&gt;\n  renameNWISColumns() |&gt;\n  mutate(Date = yearmonth(Date)) |&gt;\n  group_by(Date) |&gt;\n  summarise(Flow = mean(Flow))\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2013-01-01&endDT=2023-12-31\n\npoudre_df &lt;- poudre_flow |&gt;\n  as_tibble() |&gt;\n  mutate(Date = as.Date(paste(year(Date), month(Date), \"01\", sep = \"-\")))\n\nggplot(poudre_df, aes(x = Date, y = Flow)) +\n  geom_line() +\n  labs(\n    title = \"Poudre River Monthly Average Streamflow\",\n    subtitle = \"USGS Site 06752260\",\n    y = \"Flow (cubic feet per second)\",\n    x = \"Date\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nsplits &lt;- initial_time_split(poudre_df, prop = 0.8)\n\nprophet_model &lt;- prophet_reg(\n  seasonality_yearly = TRUE,\n  seasonality_weekly = FALSE\n) |&gt;\n  set_engine(\"prophet\") |&gt;\n  fit(Flow ~ Date, data = training(splits))\n\nDisabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this.\n\narima_model &lt;- arima_reg() |&gt;\n  set_engine(\"auto_arima\") |&gt;\n  fit(Flow ~ Date, data = training(splits))\n\nfrequency = 12 observations per 1 year\n\nmodels_tbl &lt;- modeltime_table(\n  prophet_model,\n  arima_model\n)\n\ncalibration_tbl &lt;- models_tbl |&gt;\n  modeltime_calibrate(testing(splits))\n\naccuracy_tbl &lt;- calibration_tbl |&gt;\n  modeltime_accuracy()\nprint(accuracy_tbl)\n\n# A tibble: 2 × 9\n  .model_id .model_desc             .type   mae  mape  mase smape  rmse   rsq\n      &lt;int&gt; &lt;chr&gt;                   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1         1 PROPHET                 Test   161. 393.  0.991 168.   213. 0.645\n2         2 ARIMA(1,0,0)(0,1,0)[12] Test   112.  75.8 0.688  60.9  273. 0.420\n\nrefit_tbl &lt;- calibration_tbl |&gt;\n  modeltime_refit(poudre_df)\n\nDisabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this.\n\n\nfrequency = 12 observations per 1 year\n\nforecast_horizon &lt;- 12\n\nfuture_dates &lt;- poudre_df |&gt;\n  future_frame(\n    .length_out = forecast_horizon,\n    .bind_data = TRUE\n  )\n\n.date_var is missing. Using: Date\n\nforecast_tbl &lt;- refit_tbl |&gt;\n  modeltime_forecast(\n    new_data = future_dates,\n    actual_data = poudre_df\n  )\n\nforecast_plot &lt;- forecast_tbl |&gt;\n  plot_modeltime_forecast(\n    .interactive = FALSE,\n    .conf_interval_show = TRUE\n  ) +\n  labs(\n    title = \"Poudre River Monthly Streamflow Forecast\",\n    subtitle = \"Next 12 Months\",\n    y = \"Flow (cubic feet per second)\",\n    x = \"Date\"\n  ) +\n  theme_minimal()\n\nprint(forecast_plot)\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nforecast_start_date &lt;- max(poudre_df$Date) + days(1)\nforecast_end_date &lt;- forecast_start_date + months(12) - days(1)\n\nactual_daily &lt;- readNWISdv(\n  siteNumbers = \"06752260\",\n  parameterCd = \"00060\",\n  startDate = forecast_start_date,\n  endDate = forecast_end_date\n)\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2023-12-02&endDT=2024-12-01\n\nstr(actual_daily)\n\n'data.frame':   366 obs. of  5 variables:\n $ agency_cd       : chr  \"USGS\" \"USGS\" \"USGS\" \"USGS\" ...\n $ site_no         : chr  \"06752260\" \"06752260\" \"06752260\" \"06752260\" ...\n $ Date            : Date, format: \"2023-12-02\" \"2023-12-03\" ...\n $ X_00060_00003   : num  12 12 12 12.1 12 11.5 11.3 11 10.5 12.5 ...\n $ X_00060_00003_cd: chr  \"A\" \"A\" \"A\" \"A\" ...\n - attr(*, \"url\")= chr \"https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&start\"| __truncated__\n - attr(*, \"siteInfo\")='data.frame':    1 obs. of  13 variables:\n  ..$ station_nm          : chr \"CACHE LA POUDRE RIVER AT FORT COLLINS, CO\"\n  ..$ site_no             : chr \"06752260\"\n  ..$ agency_cd           : chr \"USGS\"\n  ..$ timeZoneOffset      : chr \"-07:00\"\n  ..$ timeZoneAbbreviation: chr \"MST\"\n  ..$ dec_lat_va          : num 40.6\n  ..$ dec_lon_va          : num -105\n  ..$ srs                 : chr \"EPSG:4326\"\n  ..$ siteTypeCd          : chr \"ST\"\n  ..$ hucCd               : chr \"10190007\"\n  ..$ stateCd             : chr \"08\"\n  ..$ countyCd            : chr \"08069\"\n  ..$ network             : chr \"NWIS\"\n - attr(*, \"variableInfo\")='data.frame':    1 obs. of  7 variables:\n  ..$ variableCode       : chr \"00060\"\n  ..$ variableName       : chr \"Streamflow, ft&#179;/s\"\n  ..$ variableDescription: chr \"Discharge, cubic feet per second\"\n  ..$ valueType          : chr \"Derived Value\"\n  ..$ param_unit         : chr \"ft3/s\"\n  ..$ options            : chr \"Mean\"\n  ..$ noDataValue        : logi NA\n - attr(*, \"disclaimer\")= chr \"Provisional data are subject to revision. Go to http://waterdata.usgs.gov/nwis/help/?provisional for more information.\"\n - attr(*, \"statisticInfo\")='data.frame':   1 obs. of  2 variables:\n  ..$ statisticCd  : chr \"00003\"\n  ..$ statisticName: chr \"Mean\"\n - attr(*, \"queryTime\")= POSIXct[1:1], format: \"2025-04-23 09:41:41\"\n\nactual_monthly &lt;- actual_daily %&gt;%\n  renameNWISColumns() %&gt;%\n  select(Date, Flow) %&gt;%\n  mutate(Date = as.Date(Date)) %&gt;%\n  group_by(year = year(Date), month = month(Date)) %&gt;%\n  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  mutate(Date = as.Date(paste(year, month, \"01\", sep = \"-\"))) %&gt;%\n  select(Date, Flow)\n\nprophet_preds &lt;- forecast_tbl %&gt;%\n  filter(.model_id == 1, .index &gt;= forecast_start_date) %&gt;%\n  select(.index, .value) %&gt;%\n  rename(Date = .index, Prophet_Pred = .value)\n\narima_preds &lt;- forecast_tbl %&gt;%\n  filter(.model_id == 2, .index &gt;= forecast_start_date) %&gt;%\n  select(.index, .value) %&gt;%\n  rename(Date = .index, ARIMA_Pred = .value)\n\ncomparison_df &lt;- actual_monthly %&gt;%\n  left_join(prophet_preds, by = \"Date\") %&gt;%\n  left_join(arima_preds, by = \"Date\") %&gt;%\n  na.omit()  # Remove any missing values\n\nprophet_lm &lt;- lm(Flow ~ Prophet_Pred, data = comparison_df)\nprophet_r2 &lt;- summary(prophet_lm)$r.squared\n\narima_lm &lt;- lm(Flow ~ ARIMA_Pred, data = comparison_df)\narima_r2 &lt;- summary(arima_lm)$r.squared\n\ncat(\"Prophet Model R²:\", round(prophet_r2, 3), \"\\n\")\n\nProphet Model R²: 0.852 \n\ncat(\"ARIMA Model R²:\", round(arima_r2, 3), \"\\n\")\n\nARIMA Model R²: 0.919 \n\nprophet_plot &lt;- ggplot(comparison_df, aes(x = Prophet_Pred, y = Flow)) +\n  geom_point(alpha = 0.7, size = 3) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"red\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\n  labs(\n    title = \"Prophet Model: Predicted vs Observed Flow\",\n    x = \"Predicted Flow (cfs)\",\n    y = \"Observed Flow (cfs)\",\n    subtitle = paste(\"R² =\", round(prophet_r2, 3))\n  ) +\n  theme_minimal()\n\narima_plot &lt;- ggplot(comparison_df, aes(x = ARIMA_Pred, y = Flow)) +\n  geom_point(alpha = 0.7, size = 3) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"red\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\n  labs(\n    title = \"ARIMA Model: Predicted vs Observed Flow\",\n    x = \"Predicted Flow (cfs)\",\n    y = \"Observed Flow (cfs)\",\n    subtitle = paste(\"R² =\", round(arima_r2, 3))\n  ) +\n  theme_minimal()\n\nlibrary(patchwork)\ncombined_plot &lt;- prophet_plot + arima_plot\nprint(combined_plot)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n###Compute the R2 value between the model predictions and the observed data using a linear model and report the meaning\n\ncat(\"\\n\\nInterpretation of R² values:\\n\")\n\n\n\nInterpretation of R² values:\n\ncat(\"R² represents the proportion of variance in the observed streamflow data that is explained by the model predictions.\\n\\n\")\n\nR² represents the proportion of variance in the observed streamflow data that is explained by the model predictions.\n\ncat(\"For the Prophet model, an R² of\", round(prophet_r2, 3), \"means that approximately\", \n    round(prophet_r2 * 100, 1), \"% of the variance in the actual Poudre River streamflow is explained by the model.\\n\\n\")\n\nFor the Prophet model, an R² of 0.852 means that approximately 85.2 % of the variance in the actual Poudre River streamflow is explained by the model.\n\ncat(\"For the ARIMA model, an R² of\", round(arima_r2, 3), \"means that approximately\", \n    round(arima_r2 * 100, 1), \"% of the variance in the actual Poudre River streamflow is explained by the model.\\n\\n\")\n\nFor the ARIMA model, an R² of 0.919 means that approximately 91.9 % of the variance in the actual Poudre River streamflow is explained by the model.\n\ncat(\"The closer R² is to 1, the better the model predictions match the observed values.\\n\")\n\nThe closer R² is to 1, the better the model predictions match the observed values.\n\ncat(\"The model with the higher R² value (\", ifelse(prophet_r2 &gt; arima_r2, \"Prophet\", \"ARIMA\"), \n    \") provides better predictions of Poudre River streamflow during the forecast period.\\n\")\n\nThe model with the higher R² value ( ARIMA ) provides better predictions of Poudre River streamflow during the forecast period."
  },
  {
    "objectID": "index.html#load-libraries",
    "href": "index.html#load-libraries",
    "title": "CSU ESS330 Daily Exercise 22",
    "section": "",
    "text": "library(tidyverse)   \n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(lubridate)   \nlibrary(modeltime)   \nlibrary(tidymodels)  \n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.4.0     ✔ tune         1.3.0\n✔ infer        1.0.7     ✔ workflows    1.2.0\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.3.1     ✔ yardstick    1.3.2\n✔ recipes      1.2.1     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n\nlibrary(dataRetrieval) \nlibrary(parsnip) \nlibrary(timetk)\nlibrary(prophet)\n\nLoading required package: Rcpp\n\nAttaching package: 'Rcpp'\n\nThe following object is masked from 'package:rsample':\n\n    populate\n\nLoading required package: rlang\n\nAttaching package: 'rlang'\n\nThe following objects are masked from 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n\nlibrary(tsibble)\n\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n\nAttaching package: 'tsibble'\n\nThe following object is masked from 'package:lubridate':\n\n    interval\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n\nlibrary(dplyr)\n\n\n\n\nset.seed(123)\n\npoudre_flow &lt;- readNWISdv(siteNumber = \"06752260\",\n                          parameterCd = \"00060\",\n                          startDate = \"2013-01-01\",\n                          endDate = \"2023-12-31\") |&gt;\n  renameNWISColumns() |&gt;\n  mutate(Date = yearmonth(Date)) |&gt;\n  group_by(Date) |&gt;\n  summarise(Flow = mean(Flow))\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2013-01-01&endDT=2023-12-31\n\npoudre_df &lt;- poudre_flow |&gt;\n  as_tibble() |&gt;\n  mutate(Date = as.Date(paste(year(Date), month(Date), \"01\", sep = \"-\")))\n\nggplot(poudre_df, aes(x = Date, y = Flow)) +\n  geom_line() +\n  labs(\n    title = \"Poudre River Monthly Average Streamflow\",\n    subtitle = \"USGS Site 06752260\",\n    y = \"Flow (cubic feet per second)\",\n    x = \"Date\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nsplits &lt;- initial_time_split(poudre_df, prop = 0.8)\n\nprophet_model &lt;- prophet_reg(\n  seasonality_yearly = TRUE,\n  seasonality_weekly = FALSE\n) |&gt;\n  set_engine(\"prophet\") |&gt;\n  fit(Flow ~ Date, data = training(splits))\n\nDisabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this.\n\narima_model &lt;- arima_reg() |&gt;\n  set_engine(\"auto_arima\") |&gt;\n  fit(Flow ~ Date, data = training(splits))\n\nfrequency = 12 observations per 1 year\n\nmodels_tbl &lt;- modeltime_table(\n  prophet_model,\n  arima_model\n)\n\ncalibration_tbl &lt;- models_tbl |&gt;\n  modeltime_calibrate(testing(splits))\n\naccuracy_tbl &lt;- calibration_tbl |&gt;\n  modeltime_accuracy()\nprint(accuracy_tbl)\n\n# A tibble: 2 × 9\n  .model_id .model_desc             .type   mae  mape  mase smape  rmse   rsq\n      &lt;int&gt; &lt;chr&gt;                   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1         1 PROPHET                 Test   161. 393.  0.991 168.   213. 0.645\n2         2 ARIMA(1,0,0)(0,1,0)[12] Test   112.  75.8 0.688  60.9  273. 0.420\n\nrefit_tbl &lt;- calibration_tbl |&gt;\n  modeltime_refit(poudre_df)\n\nDisabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this.\n\n\nfrequency = 12 observations per 1 year\n\nforecast_horizon &lt;- 12\n\nfuture_dates &lt;- poudre_df |&gt;\n  future_frame(\n    .length_out = forecast_horizon,\n    .bind_data = TRUE\n  )\n\n.date_var is missing. Using: Date\n\nforecast_tbl &lt;- refit_tbl |&gt;\n  modeltime_forecast(\n    new_data = future_dates,\n    actual_data = poudre_df\n  )\n\nforecast_plot &lt;- forecast_tbl |&gt;\n  plot_modeltime_forecast(\n    .interactive = FALSE,\n    .conf_interval_show = TRUE\n  ) +\n  labs(\n    title = \"Poudre River Monthly Streamflow Forecast\",\n    subtitle = \"Next 12 Months\",\n    y = \"Flow (cubic feet per second)\",\n    x = \"Date\"\n  ) +\n  theme_minimal()\n\nprint(forecast_plot)\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nforecast_start_date &lt;- max(poudre_df$Date) + days(1)\nforecast_end_date &lt;- forecast_start_date + months(12) - days(1)\n\nactual_daily &lt;- readNWISdv(\n  siteNumbers = \"06752260\",\n  parameterCd = \"00060\",\n  startDate = forecast_start_date,\n  endDate = forecast_end_date\n)\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2023-12-02&endDT=2024-12-01\n\nstr(actual_daily)\n\n'data.frame':   366 obs. of  5 variables:\n $ agency_cd       : chr  \"USGS\" \"USGS\" \"USGS\" \"USGS\" ...\n $ site_no         : chr  \"06752260\" \"06752260\" \"06752260\" \"06752260\" ...\n $ Date            : Date, format: \"2023-12-02\" \"2023-12-03\" ...\n $ X_00060_00003   : num  12 12 12 12.1 12 11.5 11.3 11 10.5 12.5 ...\n $ X_00060_00003_cd: chr  \"A\" \"A\" \"A\" \"A\" ...\n - attr(*, \"url\")= chr \"https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&start\"| __truncated__\n - attr(*, \"siteInfo\")='data.frame':    1 obs. of  13 variables:\n  ..$ station_nm          : chr \"CACHE LA POUDRE RIVER AT FORT COLLINS, CO\"\n  ..$ site_no             : chr \"06752260\"\n  ..$ agency_cd           : chr \"USGS\"\n  ..$ timeZoneOffset      : chr \"-07:00\"\n  ..$ timeZoneAbbreviation: chr \"MST\"\n  ..$ dec_lat_va          : num 40.6\n  ..$ dec_lon_va          : num -105\n  ..$ srs                 : chr \"EPSG:4326\"\n  ..$ siteTypeCd          : chr \"ST\"\n  ..$ hucCd               : chr \"10190007\"\n  ..$ stateCd             : chr \"08\"\n  ..$ countyCd            : chr \"08069\"\n  ..$ network             : chr \"NWIS\"\n - attr(*, \"variableInfo\")='data.frame':    1 obs. of  7 variables:\n  ..$ variableCode       : chr \"00060\"\n  ..$ variableName       : chr \"Streamflow, ft&#179;/s\"\n  ..$ variableDescription: chr \"Discharge, cubic feet per second\"\n  ..$ valueType          : chr \"Derived Value\"\n  ..$ param_unit         : chr \"ft3/s\"\n  ..$ options            : chr \"Mean\"\n  ..$ noDataValue        : logi NA\n - attr(*, \"disclaimer\")= chr \"Provisional data are subject to revision. Go to http://waterdata.usgs.gov/nwis/help/?provisional for more information.\"\n - attr(*, \"statisticInfo\")='data.frame':   1 obs. of  2 variables:\n  ..$ statisticCd  : chr \"00003\"\n  ..$ statisticName: chr \"Mean\"\n - attr(*, \"queryTime\")= POSIXct[1:1], format: \"2025-04-23 09:41:41\"\n\nactual_monthly &lt;- actual_daily %&gt;%\n  renameNWISColumns() %&gt;%\n  select(Date, Flow) %&gt;%\n  mutate(Date = as.Date(Date)) %&gt;%\n  group_by(year = year(Date), month = month(Date)) %&gt;%\n  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  mutate(Date = as.Date(paste(year, month, \"01\", sep = \"-\"))) %&gt;%\n  select(Date, Flow)\n\nprophet_preds &lt;- forecast_tbl %&gt;%\n  filter(.model_id == 1, .index &gt;= forecast_start_date) %&gt;%\n  select(.index, .value) %&gt;%\n  rename(Date = .index, Prophet_Pred = .value)\n\narima_preds &lt;- forecast_tbl %&gt;%\n  filter(.model_id == 2, .index &gt;= forecast_start_date) %&gt;%\n  select(.index, .value) %&gt;%\n  rename(Date = .index, ARIMA_Pred = .value)\n\ncomparison_df &lt;- actual_monthly %&gt;%\n  left_join(prophet_preds, by = \"Date\") %&gt;%\n  left_join(arima_preds, by = \"Date\") %&gt;%\n  na.omit()  # Remove any missing values\n\nprophet_lm &lt;- lm(Flow ~ Prophet_Pred, data = comparison_df)\nprophet_r2 &lt;- summary(prophet_lm)$r.squared\n\narima_lm &lt;- lm(Flow ~ ARIMA_Pred, data = comparison_df)\narima_r2 &lt;- summary(arima_lm)$r.squared\n\ncat(\"Prophet Model R²:\", round(prophet_r2, 3), \"\\n\")\n\nProphet Model R²: 0.852 \n\ncat(\"ARIMA Model R²:\", round(arima_r2, 3), \"\\n\")\n\nARIMA Model R²: 0.919 \n\nprophet_plot &lt;- ggplot(comparison_df, aes(x = Prophet_Pred, y = Flow)) +\n  geom_point(alpha = 0.7, size = 3) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"red\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\n  labs(\n    title = \"Prophet Model: Predicted vs Observed Flow\",\n    x = \"Predicted Flow (cfs)\",\n    y = \"Observed Flow (cfs)\",\n    subtitle = paste(\"R² =\", round(prophet_r2, 3))\n  ) +\n  theme_minimal()\n\narima_plot &lt;- ggplot(comparison_df, aes(x = ARIMA_Pred, y = Flow)) +\n  geom_point(alpha = 0.7, size = 3) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"red\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\n  labs(\n    title = \"ARIMA Model: Predicted vs Observed Flow\",\n    x = \"Predicted Flow (cfs)\",\n    y = \"Observed Flow (cfs)\",\n    subtitle = paste(\"R² =\", round(arima_r2, 3))\n  ) +\n  theme_minimal()\n\nlibrary(patchwork)\ncombined_plot &lt;- prophet_plot + arima_plot\nprint(combined_plot)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n###Compute the R2 value between the model predictions and the observed data using a linear model and report the meaning\n\ncat(\"\\n\\nInterpretation of R² values:\\n\")\n\n\n\nInterpretation of R² values:\n\ncat(\"R² represents the proportion of variance in the observed streamflow data that is explained by the model predictions.\\n\\n\")\n\nR² represents the proportion of variance in the observed streamflow data that is explained by the model predictions.\n\ncat(\"For the Prophet model, an R² of\", round(prophet_r2, 3), \"means that approximately\", \n    round(prophet_r2 * 100, 1), \"% of the variance in the actual Poudre River streamflow is explained by the model.\\n\\n\")\n\nFor the Prophet model, an R² of 0.852 means that approximately 85.2 % of the variance in the actual Poudre River streamflow is explained by the model.\n\ncat(\"For the ARIMA model, an R² of\", round(arima_r2, 3), \"means that approximately\", \n    round(arima_r2 * 100, 1), \"% of the variance in the actual Poudre River streamflow is explained by the model.\\n\\n\")\n\nFor the ARIMA model, an R² of 0.919 means that approximately 91.9 % of the variance in the actual Poudre River streamflow is explained by the model.\n\ncat(\"The closer R² is to 1, the better the model predictions match the observed values.\\n\")\n\nThe closer R² is to 1, the better the model predictions match the observed values.\n\ncat(\"The model with the higher R² value (\", ifelse(prophet_r2 &gt; arima_r2, \"Prophet\", \"ARIMA\"), \n    \") provides better predictions of Poudre River streamflow during the forecast period.\\n\")\n\nThe model with the higher R² value ( ARIMA ) provides better predictions of Poudre River streamflow during the forecast period."
  }
]